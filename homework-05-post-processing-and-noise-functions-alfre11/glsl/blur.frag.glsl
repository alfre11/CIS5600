#version 330 core

in vec2 fs_UV;
out vec3 color;

uniform sampler2D u_Texture;

// 11x11 Gaussian kernel
const float kernel[121] = float[121](
    0.006849, 0.007239, 0.007559, 0.007795, 0.007941, 0.007990, 0.007941, 0.007795, 0.007559, 0.007239, 0.006849,
    0.007239, 0.007653, 0.007990, 0.008240, 0.008394, 0.008446, 0.008394, 0.008240, 0.007990, 0.007653, 0.007239,
    0.007559, 0.007990, 0.008342, 0.008604, 0.008764, 0.008819, 0.008764, 0.008604, 0.008342, 0.007990, 0.007559,
    0.007795, 0.008240, 0.008604, 0.008873, 0.009039, 0.009095, 0.009039, 0.008873, 0.008604, 0.008240, 0.007795,
    0.007941, 0.008394, 0.008764, 0.009039, 0.009208, 0.009265, 0.009208, 0.009039, 0.008764, 0.008394, 0.007941,
    0.007990, 0.008446, 0.008819, 0.009095, 0.009265, 0.009322, 0.009265, 0.009095, 0.008819, 0.008446, 0.007990,
    0.007941, 0.008394, 0.008764, 0.009039, 0.009208, 0.009265, 0.009208, 0.009039, 0.008764, 0.008394, 0.007941,
    0.007795, 0.008240, 0.008604, 0.008873, 0.009039, 0.009095, 0.009039, 0.008873, 0.008604, 0.008240, 0.007795,
    0.007559, 0.007990, 0.008342, 0.008604, 0.008764, 0.008819, 0.008764, 0.008604, 0.008342, 0.007990, 0.007559,
    0.007239, 0.007653, 0.007990, 0.008240, 0.008394, 0.008446, 0.008394, 0.008240, 0.007990, 0.007653, 0.007239,
    0.006849, 0.007239, 0.007559, 0.007795, 0.007941, 0.007990, 0.007941, 0.007795, 0.007559, 0.007239, 0.006849
);

void main()
{
    vec2 texOff = 1.0 / textureSize(u_Texture, 0);

    vec3 result = vec3(0.0);

    int index = 0;

    for (int i = -5; i <= 5; i++) {
        for (int j = -5; j <= 5; j++) {
            vec2 offset = vec2(texOff.x * float(i), texOff.y * float(j));

            vec3 sampl = texture(u_Texture, fs_UV + offset).rgb;

            result += sampl * kernel[index];
            index++;
        }
    }

    // Set the final color of the fragment
    color = result;
}
